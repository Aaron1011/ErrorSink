# ╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
# ║ config.yml file of the ErrorSink plugin created by NLThijs48.                                                              ║
# ║ Github can be found at https://github.com/NLthijs48/ErrorSink.                                                             ║
# ╚════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

# The DSN for the Sentry.io project to send errors to
# Found under Project Settings in the 'Client Keys (DSN)' tab (use the non-public variant)
dsn: ""
# Name of the server reporting the error (useful if you have multiple servers using the same Sentry project)
serverName: ""

# Drop events that match any of the rules (to filter out spam and false positives)
filterRules:
  info:
    # Drop info and debug messages
    level: ["INFO", "DEBUG", "OFF"]
  spam:
    message:
      # Spammy line-by-line exceptions coming from Skrips
      - "^#!#!"
      # One line warning message before printing actual exceptions from async threads
      - "^Exception in thread \"(Craft Scheduler )?Thread - \\d+\" $"
      # Vanilla/Spigot problems that cannot be fixed (could indicate lag though)
      - "^[a-zA-Z0-9_]{1,16} moved too quickly!"
      - "^[a-zA-Z0-9_]{1,16} moved wrongly!"
      # Spigot bug
      - "^handleDisconnection\\(\\) called twice$"
  onlinePlayersException:
    exception:
      # Common error for old plugins (hard to fix sometimes)
      - "java.lang.NoSuchMethodError: org.bukkit.Server.getOnlinePlayers\\(\\)\\[Lorg/bukkit/entity/Player"

# Add information to events and/or change their properties
eventRules:
  # Name of the rule
  OPTIONS:
    #### Which events should this rule apply to?
    #### level, message and exception need to match, if one is unset it will match anything
    # The level(s) to match: FATAL, ERROR, WARN, INFO, DEBUG, TRACE
    level: []
    # Regex(es) matching the message (string or list)
    message: ""
    # Regex(es) matching the exception (string or list)
    exception: ""

    # Shown at the top of issues, can easiliy be used as filters
    tags:
      tag: "some text"

    # Data shown at the bottom of issues, cannot be filtered, but can provide detailed context
    data:
      Text: "A story"
      Multiline-text: |
        First line,
        also important line
      List: ["a", "b", "c"]
      Complex:
        A: "a"
        B:
          C: 123
          D: ["d", "e"]

    # String or array used to determine event grouping (events group together on an exact match)
    fingerprint:
    # Change the level of the event: FATAL, ERROR, WARNING, INFO, DEBUG
    level:
    # Set the environment (displayed as tag)
    environment:
    # Set the culprit (displayed as sub-header of issues on Sentry)
    culprit:
    # Set the logger (displayed after the sub-header of issues on Sentry)
    logger:
    # Set the release (displayed as tag and each version is displayed in the releases tab, version of ErrorSink by default)
    release:
    # Set the platform (displayed as tag)
    platform:

#breadcrumbs:
#  # Maximum number of entries that can appear in the breadcrumb
#  # Sentry does not advice to use more than 100, and reports exceeding limits might get dropped
#  maximumEntries: 50
#
#  rules:
#    ALL:
#      # Regex to match breadcrumbs (single or list)
#      match:
#      # Drop this matching entry
#      drop: false
#      # Type of the breadcrumb entry (determines the icon on Sentry)
#      # Current useful values: default, debug, user, location, http (hides message), navigation
#      type: "default"
#      # Category of the breadcrumb (text shown at the start of the breadcrumb, around 16 characters maximum length)
#      category: " "
#      # error, warning, info, debug, default
#      level: "default"

# Print debug messages to the console
debug: false